/* Specific styles for the App component. */

.bg-bottom-svg {
    background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%23D3DBE8" fill-opacity="1" d="M0,192L60,202.7C120,213,240,235,360,218.7C480,203,600,149,720,128C840,107,960,117,1080,133.3C1200,149,1320,171,1380,181.3L1440,192L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z"></path></svg>') no-repeat bottom;
    background-size: contain;
}

.scrollbar-hidden {
    scrollbar-width: none;
}
.scrollbar-hidden::-webkit-scrollbar {
    display: none;
}

.main-area-cont .facility-cont,
.main-area-cont .video-cont {
    min-width: calc(12.75rem * (16 / 9));
}

.video-size {
    background-color: var(--color-neutral);
    aspect-ratio: 16 / 9;
    min-height: 12.75rem;
}

.video-controls-cont {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    padding: 0 8px 8px;
}

.controls-gradient-overlay {
    position: absolute;
    width: 100%;
    height: 176px;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: -1;
    background: linear-gradient(rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.6) 100%);
}


/* Media Queries */
@media (width >= 59.375rem) {
    .main-area-cont .facility-cont,
    .main-area-cont .video-cont {
        overflow-y: auto;
    }

    .main-area-cont .facility-cont {
        min-width: var(--container-4xs);
        width: var(--container-4xs);        /* Fix this later */
    }

    .main-area-cont {
        overflow: hidden;
    }

    .tab {
        justify-content: flex-start;
    }

    .tabs-border .tab::before {
        width: calc(100% - 2rem);
        left: unset;
    }
}

@media (width >= 80rem) {
    .main-area-cont .facility-cont {
        min-width: var(--container-3xs);
        width: var(--container-3xs);        /* Fix this later */
    }

    .tabs-border .tab::before {
        width: calc(100% - 2.5rem);
    }
}

@media (width >= 96rem) {
    .main-area-cont .facility-cont {
        min-width: 288px;
        width: 288px;        /* Fix this later */
    }
}


/* Animations */
.slide-up {
    animation: slide-up 0.5s ease;
    animation-fill-mode: forwards;
}

@keyframes slide-up {
    from {
        transform: translateY(0);
        opacity: 1;
    }
    to {
        transform: translateY(-100%);
        opacity: 0;
    }
}

.slide-down {
    animation: slide-down 0.5s ease;
    animation-fill-mode: forwards;
}

@keyframes slide-down {
    from {
        transform: translateY(-100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.fade-in {
    animation: fade-in 0.2s ease;
    animation-fill-mode: forwards;
}

@keyframes fade-in {
    from { opacity: 0; }
    to { opacity: 1; }
}

.fade-out {
    animation: fade-out 0.2s ease;
    animation-fill-mode: forwards;
}

@keyframes fade-out {
    from { opacity: 1; }
    to { opacity: 0; }
}


/* Overwritten pre-build UI styles */
.divider::before,
.divider::after {
    height: calc(0.188rem * 0.5);       /* 1.5px */
}

.room-details > input:is([type="checkbox"], [type="radio"]),
.room-details > .collapse-title {
    padding: 12px 49px 12px 16px;
    min-height: fit-content;
}

.room-details.collapse-arrow .collapse-title:after {
    top: 50%;
}

.tabs-border .tab:is(input:checked):before {
    --tab-border-color: var(--color-brnd-primary-50);
    border-color: var(--tab-border-color);
}

.tabs-border .tab:is(input:checked):after {
    color: var(--color-brnd-secondary);
}

.tab:hover {
    color: var(--color-brnd-secondary);
}

.tab:is(input[type="radio"]):after {
    font-weight: var(--font-weight-medium);
}

.tooltip {
    --tt-bg: var(--color-neutral-800);
}

.tooltip[data-tip]:before {
    padding-inline: calc(0.3125rem * 2);
}
